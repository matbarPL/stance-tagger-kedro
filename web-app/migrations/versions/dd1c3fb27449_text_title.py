"""text title

Revision ID: dd1c3fb27449
Revises: 
Create Date: 2020-03-30 22:30:07.500200

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'dd1c3fb27449'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('favour_against',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('token', sa.String(length=32), nullable=True),
    sa.Column('token_expiration', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('password'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_token'), 'user', ['token'], unique=True)
    op.create_table('text',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('publication_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('body', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_text_publication_date'), 'text', ['publication_date'], unique=False)
    op.create_table('text_favour_against',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text_id', sa.Integer(), nullable=True),
    sa.Column('favour_against_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['favour_against_id'], ['favour_against.id'], ),
    sa.ForeignKeyConstraint(['text_id'], ['text.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('text_topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text_id', sa.Integer(), nullable=True),
    sa.Column('topic_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['text_id'], ['text.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('text_topic')
    op.drop_table('text_favour_against')
    op.drop_index(op.f('ix_text_publication_date'), table_name='text')
    op.drop_table('text')
    op.drop_index(op.f('ix_user_token'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('topic')
    op.drop_table('favour_against')
    # ### end Alembic commands ###
